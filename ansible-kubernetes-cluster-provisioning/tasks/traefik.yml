- name: Check for kubeconfig
  ansible.builtin.stat:
    path: "{{ home }}/.kube/config"
  register: kubeconfig
- name: Add traefik repository
  when: kubeconfig.stat.exists
  kubernetes.core.helm_repository:
    kubeconfig: "{{ home }}/.kube/config"
    name: traefik
    repo_url: https://helm.traefik.io/traefik
# - name: Create network-system network policy
#   when: kubeconfig.stat.exists
#   kubernetes.core.k8s:
#     kubeconfig: "{{ home }}/.kube/config"
#     name: traefik-network-policy
#     namespace: network-system
#     api_version: networking.k8s.io/v1
#     kind: NetworkPolicy
#     state: present
#     definition:
#       metadata:
#         annotations:
#           np.rke2.io/dns: resolved
#       spec:
#         podSelector: {}
#         egress:
#         - from:
#           - podSelector:
#               matchLabels:
#                 app.kubernetes.io/instance: traefik-network-system
#           - ipBlock:
#               cidr: 10.254.0.0/16
#           ports:
#           - port: 80
#             protocol: TCP
#           - port: 443
#             protocol: TCP
#           - port: 443
#             protocol: UDP
#         ingress:
#         - ports:
#           - port: 80
#             protocol: TCP
#           - port: 443
#             protocol: TCP
#           - port: 443
#             protocol: UDP
#         policyTypes:
#         - Ingress
#         - Egress
- name: Create Traefik IP Reservation
  when: kubeconfig.stat.exists
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    state: present
    apply: true
    server_side_apply:
      field_manager: ansible
      force_conflicts: true
    definition:
      apiVersion: projectcalico.org/v3
      kind: IPReservation
      metadata:
        name: traefik-ipv4-reservation
        namespace: network-system
      spec:
        reservedCIDRs:
          - 10.0.100.1
- name: Get Latest Traefik Release
  ansible.builtin.uri:
    url: https://api.github.com/repos/traefik/traefik/releases/latest
    return_content: true
  register: traefik_release_json
  failed_when: traefik_release_json is failed
- name: Download Traefik CRD Definition
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/traefik/traefik/{{ traefik_release_json.json.tag_name }}/docs/content/reference/dynamic-configuration/kubernetes-crd-definition-v1.yml
    dest: "{{ playbook_dir }}/kubernetes-crd-definition-v1.yml"
    mode: '0664'
  register: traefikcrddefv1
- name: Download Traefik CRD RBAC Definition
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/traefik/traefik/{{ traefik_release_json.json.tag_name }}/docs/content/reference/dynamic-configuration/kubernetes-crd-rbac.yml
    dest: "{{ playbook_dir }}/kubernetes-crd-rbac.yml"
    mode: '0664'
  register: traefikcrdrbacdef
# - name: Download Traefik CRD Resource Definition
#   ansible.builtin.get_url:
#     url: https://raw.githubusercontent.com/traefik/traefik/{{ traefik_release_json.json.tag_name }}/docs/content/reference/dynamic-configuration/kubernetes-crd-resource.yml
#     dest: "{{ playbook_dir }}/kubernetes-crd-resource.yml"
#     mode: '0664'
#   register: traefikcrdresourcedef
- name: Install Traefik CRD Definition
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    src: "{{ traefikcrddefv1.dest }}"
    namespace: network-system
    state: present
    apply: true
    force: true
    server_side_apply:
      field_manager: ansible
      force_conflicts: true
  when: >-
    traefikcrddefv1 is not none and
    kubeconfig.stat.exists
- name: Install Traefik CRD RBAC
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    src: "{{ traefikcrdrbacdef.dest }}"
    namespace: network-system
    state: present
    apply: true
    force: true
    server_side_apply:
      field_manager: ansible
      force_conflicts: true
  when: >-
    traefikcrdrbacdef is not none and
    kubeconfig.stat.exists
# - name: Install Traefik CRD Resource
#   kubernetes.core.k8s:
#     kubeconfig: "{{ home }}/.kube/config"
#     src: "{{ traefikcrdresourcedef.dest }}"
#     namespace: network-system
#     state: present
#     apply: true
#     force: true
#     server_side_apply:
#       field_manager: ansible
#       force_conflicts: true
#   when: >-
#     traefikcrdresourcedef is not none and
#     kubeconfig.stat.exists
- name: Check for traefik values
  ansible.builtin.stat:
    path: "{{ playbook_dir }}/helm_values/traefik/values.yaml"
  register: traefikvalues
- name: Deploy Traefik chart
  when: kubeconfig.stat.exists
  kubernetes.core.helm:
    kubeconfig: "{{ home }}/.kube/config"
    name: traefik
    release_namespace: network-system
    # renovate: registryUrl=https://helm.traefik.io/traefik
    chart_ref: traefik
    chart_version: 34.4.1
    chart_repo_url: https://helm.traefik.io/traefik
    values_files:
      - "{{ traefikvalues.stat.path }}"
- name: Check for crowdsec bouncer config
  ansible.builtin.stat:
    path: "{{ playbook_dir }}/helm_values/traefik/crowdsec-bouncer.yaml"
  register: crowdsecbouncertraefikconfig
- name: Configure crowdsec bouncer for traefik
  when: kubeconfig.stat.exists
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    state: present
    namespace: network-system
    src: "{{ crowdsecbouncertraefikconfig.stat.path }}"
    # validate:
    #   fail_on_error: false
- name: Check for authentik config for traefik
  ansible.builtin.stat:
    path: "{{ playbook_dir }}/helm_values/traefik/authentik.yaml"
  register: authentiktraefikconfig
- name: Configure authentik for traefik
  when: kubeconfig.stat.exists
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    state: present
    namespace: network-system
    src: "{{ authentiktraefikconfig.stat.path }}"
    # validate:
    #   fail_on_error: false
