- name: Check for kubeconfig
  delegate_to: localhost
  run_once: true
  ansible.builtin.stat:
    path: "{{ home }}/.kube/config"
  register: kubeconfig
- name: Stat age.key
  ansible.builtin.stat:
    path: "{{ home }}/.config/sops/age/keys.txt"
  register: age_key_file
- name: Fail if Age Keyfile does not exist
  ansible.builtin.fail:
    message: "{{ home }}/.config/sops/age/keys.txt does not exist"
  when: not age_key_file.stat.exists
- name: Get Age Public Key
  ansible.builtin.command: |
    grep -Po '(?<=public key: ).*' {{ home }}/.config/sops/age/keys.txt
  register: age_public_key
  when: age_key_file.stat.exists
  changed_when: true
- name: Debug Age Public Key
  ansible.builtin.debug:
    msg: "age public key: \"{{ age_public_key.stdout }}\""
- name: Check for vault initial secrets encrypted file
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{ playbook_dir + '/secrets/vault-initial-secrets.sops.yaml.enc' }}"
  register: vaultinitialsecretsfile
- name: Unencrypt Vault Initial Secrets
  delegate_to: localhost
  ansible.builtin.set_fact:
    vaultinitial: "{{ lookup('file', playbook_dir + '/secrets/vault-initial-secrets.sops.yaml.enc') | community.sops.decrypt | ansible.builtin.from_yaml }}"
  when: vaultinitialsecretsfile.stat.exists
  failed_when: not vaultinitialsecretsfile.stat.exists
# - name: Enable kvv2 secret store
#   kubernetes.core.k8s_exec:
#     kubeconfig: "{{ home }}/.kube/config"
#     namespace: vault-system
#     pod: vault-0
#     command: sh -c "vault secrets enable -path=/secret -version=2 kv"
#   when: >-
#     kubeconfig.stat.exists
#   register: vaultinitialsecretstoreinit
#   failed_when: | 
#     vaultinitialsecretstoreinit.rc == 1 or vaultinitialsecretstoreinit.rc > 2
- name: Debug
  delegate_to: localhost
  ansible.builtin.debug:
    msg: "{{ (vaultinitial | ansible.builtin.from_yaml) }}"
  changed_when: true
