- name: Check for kubeconfig
  ansible.builtin.stat:
    path: "{{ home }}/.kube/config"
  register: kubeconfig
- name: Add Metallb repository
  when: kubeconfig.stat.exists
  kubernetes.core.helm_repository:
    kubeconfig: "{{ home }}/.kube/config"
    name: metallb
    repo_url: https://metallb.github.io/metallb
- name: Create network-system namespace
  when: kubeconfig.stat.exists
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    name: network-system
    api_version: v1
    kind: Namespace
    state: present
    definition:
      metadata:
        annotations:
          # cni.projectcalico.org/ipv4pools: '["system"]'
          metallb.universe.tf/address-pool: "system"
        labels:
          pod-security.kubernetes.io/enforce: privileged
          pod-security.kubernetes.io/audit: privileged
          pod-security.kubernetes.io/warn: privileged
- name: Check for kubeconfig
  ansible.builtin.stat:
    path: "{{ home }}/.kube/config"
  register: kubeconfig
- name: Deploy Metallb chart
  when: kubeconfig.stat.exists
  kubernetes.core.helm:
    # renovate: registryUrl=https://metallb.github.io/metallb
    kubeconfig: "{{ home }}/.kube/config"
    name: metallb
    release_namespace: network-system
    chart_ref: metallb
    chart_version: 0.15.2
    chart_repo_url: https://metallb.github.io/metallb
    values:
      controller:
        logLevel: "debug"
        livenessProbe:
          enabled: true
        readinessProbe:
          enabled: true
        resources:
          limits:
            cpu: 3000m
          requests:
            cpu: 1000m
        tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
        - key: "node-role.kubernetes.io/etcd"
          operator: "Exists"
      speaker:
        livenessProbe:
          enabled: true
        readinessProbe:
          enabled: true
        tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
        - key: "node-role.kubernetes.io/etcd"
          operator: "Exists"
- name: Wait for metallb controller to complete
  kubernetes.core.k8s_info:
    kubeconfig: "{{ home }}/.kube/config"
    kind: Deployment
    namespace: network-system
    label_selectors:
    - app.kubernetes.io/name = metallb
    - app.kubernetes.io/component = controller
    wait: true
    wait_condition:
      type: "Available"
      status: "True"
    wait_sleep: 30
    wait_timeout: 600
  register: metallbcontrollerstatus
  until: metallbcontrollerstatus.resources[0].status.readyReplicas | int > 0
  retries: 20
  delay: 15
- name: Create Default IPAddressPool Config
  when: kubeconfig.stat.exists
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    state: present
    # apply: true
    # server_side_apply:
    #   field_manager: ansible
    definition:
      apiVersion: metallb.io/v1beta1
      kind: IPAddressPool
      metadata:
        name: default
        namespace: network-system
      spec:
        addresses:
        - 10.0.101.0/24
- name: Create System IPAddressPool Config
  when: kubeconfig.stat.exists
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    state: present
    # apply: true
    # server_side_apply:
    #   field_manager: ansible
    definition:
      apiVersion: metallb.io/v1beta1
      kind: IPAddressPool
      metadata:
        name: system
        namespace: network-system
      spec:
        addresses:
        - 10.0.100.0/24
- name: Create Default IPv4 BGPPeer Config
  when: kubeconfig.stat.exists
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    state: present
    # apply: true
    # server_side_apply:
    #   field_manager: ansible
    definition:
      apiVersion: metallb.io/v1beta2
      kind: BGPPeer
      metadata:
        name: default-ipv4
        namespace: network-system
      spec:
        myASN: 65001
        peerASN: 65000
        peerAddress: 10.0.0.1
        ebgpMultiHop: true
        dualStackAddressFamily: false
# - name: Create Default IPv6 BGPPeer Config
#   when: kubeconfig.stat.exists
#   kubernetes.core.k8s:
#     kubeconfig: "{{ home }}/.kube/config"
#     state: present
#     # apply: true
#     # server_side_apply:
#     #   field_manager: ansible
#     definition:
#       apiVersion: metallb.io/v1beta2
#       kind: BGPPeer
#       metadata:
#         name: default-ipv6
#         namespace: network-system
#       spec:
#         myASN: 65001
#         peerASN: 65000
#         peerAddress: "fd00:11::1/64"
#         ebgpMultiHop: true
#         disableMP: true
- name: Create BGP Adverstisement Config
  when: kubeconfig.stat.exists
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    state: present
    # apply: true
    # server_side_apply:
    #   field_manager: ansible
    definition:
      apiVersion: metallb.io/v1beta1
      kind: BGPAdvertisement
      metadata:
        name: default
        namespace: network-system
      spec:
        ipAddressPools:
        - default
        - system
        aggregationLength: 24
# - name: Create Coredns IP Reservation
#   when: kubeconfig.stat.exists
#   kubernetes.core.k8s:
#     kubeconfig: "{{ home }}/.kube/config"
#     state: present
#     apply: true
#     server_side_apply:
#       field_manager: ansible
#       force_conflicts: true
#     definition:
#       apiVersion: projectcalico.org/v3
#       kind: IPReservation
#       metadata:
#         name: coredns-ipv4-reservation
#         namespace: kube-system
#       spec:
#         reservedCIDRs:
#           - 10.0.100.2
- name: Create Coredns LoadBalancer
  when: kubeconfig.stat.exists
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    api_version: v1
    kind: Service
    name: rke2-coredns-rke2-coredns-lb
    namespace: kube-system
    state: present
    # apply: true
    # server_side_apply:
    #   field_manager: ansible
    definition:
      metadata:
        annotations:
          metallb.universe.tf/allow-shared-ip: coredns
          metallb.universe.tf/loadBalancerIPs: 10.0.100.2
          metallb.universe.tf/address-pool: system
      spec:
        selector:
          app.kubernetes.io/instance: rke2-coredns
          app.kubernetes.io/name: rke2-coredns
          k8s-app: kube-dns
        ports:
        - name: udp-53
          port: 53
          protocol: UDP
          targetPort: 53
        - name: tcp-53
          port: 53
          protocol: TCP
          targetPort: 53
        externalTrafficPolicy: Cluster
        loadBalancerIP: 10.0.100.2
        type: LoadBalancer
