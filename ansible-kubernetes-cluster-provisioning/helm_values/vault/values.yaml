global:
  namespace: vault-system
  enabled: true
injector:
  replicas: 3
  logFormat: "json"
  certs:
    secretName: null
  strategy:
    rollingUpdate:
      maxSurge: "25%"
      maxUnavailable: "25%"
    type: RollingUpdate
server:
  logLevel: "info"
  logFormat: "json"
  readinessProbe:
    initialDelaySeconds: 20
  ingress:
    enabled: true
    ingressClassName: traefik
    hosts:
      - host: vault.homelab.heyser.xyz
        paths: []
    tls:
      - secretName: vault-homelab-heyser-xyz-tls
        hosts:
          - vault.homelab.heyser.xyz
  tolerations:
    - effect: PreferNoSchedule
      key: node-role.kubernetes.io
      value: master
    - key: node-role.kubernetes.io/control-plane
      operator: Equal
      effect: NoSchedule
  dataStorage:
    enabled: true
    size: 40Gi
    annotations:
      nfs.io/storage-path: "containers/kubernetes/vault/data"
    storageClass: "nfs-dynamic-ss"
    accessMode: ReadWriteMany
  auditStorage:
    enabled: true
    annotations:
      nfs.io/storage-path: "containers/kubernetes/vault/audit"
    storageClass: "nfs-dynamic-ss"
    accessMode: ReadWriteMany
  # extraEnvironmentVars:
  #   VAULT_CACERT: /vault/userconfig/tls-ca/ca.crt
  # extraVolumes:
  #   - type: secret
  #     name: tls-server
  #   - type: secret
  #     name: tls-ca
  # extraInitContainers:
  #   - name: chmod
  #     image: alpine
  #     command: [sh, -c]
  #     args:
  #       - if [[ -f /vault/data/vault.db ]]; then echo "chmod 600 vault.db"; chmod 600 /vault/data/vault.db; fi; if [[ -f /vault/data/raft/raft.db ]]; then echo "chmod 600 raft.db"; chmod 600 /vault/data/raft/raft.db; fi
  #     volumeMounts:
  #       - name: data
  #         mountPath: /vault/data
  #   - name: chown
  #     image: alpine
  #     command: [sh, -c]
  #     args:
  #       - if [[ -d /vault/data/ ]]; then echo "chown vault/data"; chown -R 100:1000 /vault/data/; fi
  #     volumeMounts:
  #       - name: data
  #         mountPath: /vault/data
  standalone:
    enabled: false
  ha:
    enabled: true
    clusterAddr: vault.vault-system.svc.cluster.local
    raft:
      enabled: true
      setNodeId: true
      config: |
        ui = true
        disable_mlock = true
        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          # tls_cert_file = "/vault/userconfig/tls-server/fullchain.pem"
          # tls_key_file = "/vault/userconfig/tls-server/server.key"
          # tls_client_ca_file = "/vault/userconfig/tls-server/client-auth-ca.pem"
        }
        disable_sealwrap = true
        seal "ocikms" {
          key_id = "ocid1.vault.oc1.iad.ejtwpffhaacok.abuwcljtphky5tek5szyy2wmz2ig324rmnbw7fqnyuevkxomgk2shjwzojaq"
          crypto_endpoint = "https://ejtwpffhaacok-crypto.kms.us-ashburn-1.oraclecloud.com"
          management_endpoint = "https://ejtwpffhaacok-management.kms.us-ashburn-1.oraclecloud.com"
          # auth_type_api_key = "true" # default false
        }
        storage "raft" {
          path = "/vault/data"
          retry_join {
            auto_join = "provider=k8s label_selector=\"app.kubernetes.io/name=vault,component=server\" namespace=\"{{ .Release.Namespace }}\""
            auto_join_port = 8200
            auto_join_scheme = "http"
          }
          # retry_join {
          #   leader_api_addr = "http://vault-0.vault-system.svc.cluster.local:8200"
          #   # leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
          #   # leader_client_cert_file = "/vault/userconfig/tls-server/server.crt"
          #   # leader_client_key_file = "/vault/userconfig/tls-server/server.key"
          # }
          # retry_join {
          #   leader_api_addr = "http://vault-1.vault-system.svc.cluster.local:8200"
          #   # leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
          #   # leader_client_cert_file = "/vault/userconfig/tls-server/server.crt"
          #   # leader_client_key_file = "/vault/userconfig/tls-server/server.key"
          # }
          # retry_join {
          #   leader_api_addr = "http://vault-2.vault-system.svc.cluster.local:8200"
          #   # leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
          #   # leader_client_cert_file = "/vault/userconfig/tls-server/server.crt"
          #   # leader_client_key_file = "/vault/userconfig/tls-server/server.key"
          # }
        }
        service_registration "kubernetes" {}
ui:
  enabled: true
csi:
  enabled: true
  daemonSet:
    updateStrategy:
      maxSurge: "25%"
      maxUnavailable: "25%"
  agent:
    logFormat: json
