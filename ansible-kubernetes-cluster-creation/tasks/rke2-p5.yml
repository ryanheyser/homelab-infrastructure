- name: Check for kubeconfig
  ansible.builtin.stat:
    path: "{{ home }}/.kube/config"
  register: kubeconfig
- name: Create calico-apiserver namespace
  when: kubeconfig.stat.exists
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    name: calico-apiserver
    api_version: v1
    kind: Namespace
    state: present
    definition:
      metadata:
        annotations:
          # cni.projectcalico.org/ipv4pools: '["system"]'
          metallb.universe.tf/address-pool: "system"
        labels:
          pod-security.kubernetes.io/enforce: privileged
          pod-security.kubernetes.io/audit: privileged
          pod-security.kubernetes.io/warn: privileged
- name: Patch calico-system namespace
  when: kubeconfig.stat.exists
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    name: calico-system
    api_version: v1
    kind: Namespace
    state: present
    definition:
      metadata:
        annotations:
          # cni.projectcalico.org/ipv4pools: '["system"]'
          metallb.universe.tf/address-pool: "system"
        labels:
          pod-security.kubernetes.io/enforce: privileged
          pod-security.kubernetes.io/audit: privileged
          pod-security.kubernetes.io/warn: privileged
- name: Create network-system namespace
  when: kubeconfig.stat.exists
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    name: network-system
    api_version: v1
    kind: Namespace
    state: present
    definition:
      metadata:
        annotations:
          # cni.projectcalico.org/ipv4pools: '["system"]'
          metallb.universe.tf/address-pool: "system"
        labels:
          pod-security.kubernetes.io/enforce: privileged
          pod-security.kubernetes.io/audit: privileged
          pod-security.kubernetes.io/warn: privileged
# - name: Configure RKE2-Multus
#   run_once: true
#   delegate_to: localhost
#   kubernetes.core.k8s:
#     kubeconfig: "{{ home }}/.kube/config"
#     api_version: helm.cattle.io/v1
#     kind: HelmChartConfig
#     name: rke2-multus
#     namespace: kube-system
#     state: present
- name: Configure RKE2-Calico-Crd
  run_once: true
  delegate_to: localhost
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    api_version: helm.cattle.io/v1
    kind: HelmChartConfig
    name: rke2-calico-crd
    namespace: kube-system
    state: present
    definition:
      spec:
        valuesContent: |-
          global:
            systemDefaultIngressClass: traefik
- name: Configure RKE2-Calico
  run_once: true
  delegate_to: localhost
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    api_version: helm.cattle.io/v1
    kind: HelmChartConfig
    name: rke2-calico
    namespace: kube-system
    state: present
    definition:
      spec:
        valuesContent: |-
          priorityClassName: system-cluster-critical
          felixConfiguration:
            featureDetectOverride: "ChecksumOffloadBroken=false"
          apiServer:
            enabled: false
          global:
            clusterCIDRv4: "10.255.0.0/16"
            # clusterCIDRv6: "fd00:255::/56"
          installation:
            enabled: true
            kubernetesProvider: ''
            controlPlaneTolerations:
            - key: node-role.kubernetes.io/control-plane
              operator: Equal
              effect: NoSchedule
            - effect: PreferNoSchedule
              key: node-role.kubernetes.io
              value: master
            - key: node-role.kubernetes.io/etcd
              operator: Exists
              effect: NoExecute
            controlPlaneReplicas: 3
            nodeUpdateStrategy:
              type: RollingUpdate
              rollingUpdate:
                maxUnavailable: 1
            serviceCIDRs:
            - 10.254.0.0/16
            # - fd00:254::/56
            calicoNetwork:
              multiInterfaceMode: "Multus"
              # linuxDataplane: "BPF"
              bgp: "Enabled"
              # mtu: 9000
              nodeAddressAutodetectionV4:
                # kubernetes: NodeInternalIP
                firstFound: false
                interface: ens18
              nodeAddressAutodetectionV6: {}
              # nodeAddressAutodetectionV6:
              #   cidrs:
              #   - fd00:11::/64
              #   firstFound: false
              containerIPForwarding: "Enabled"
              ipPools:
              - allowedUses:
                - Workload
                - Tunnel
                blockSize: 26
                cidr: 10.0.101.0/24
                disableBGPExport: false
                name: default
                natOutgoing: Enabled
                nodeSelector: all()
              - allowedUses:
                - Workload
                - Tunnel
                blockSize: 26
                cidr: 10.0.100.0/24
                disableBGPExport: false
                name: system
                natOutgoing: Enabled
                nodeSelector: all()
              # - allowedUses:
              #   - Workload
              #   - Tunnel
              #   blockSize: 122
              #   cidr: fd00:255::/56
              #   disableBGPExport: false
              #   name: default-ipv6-ippool
              #   nodeSelector: all()
- name: Configure RKE2-Multus
  run_once: true
  delegate_to: localhost
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    api_version: helm.cattle.io/v1
    kind: HelmChartConfig
    name: rke2-multus
    namespace: kube-system
    state: present
    definition:
      spec:
        valuesContent: |-
          rke2-whereabouts:
            enabled: false
          pod:
            resources:
              enabled: true  
# - name: Patch Installation Configuration for Tigera Operator
#   when: kubeconfig.stat.exists
#   kubernetes.core.k8s:
#     kubeconfig: "{{ home }}/.kube/config"
#     state: patched
#     name: default
#     api_version: operator.tigera.io/v1
#     kind: Installation
#     # apply: true
#     # server_side_apply:
#     #   field_manager: ansible
#     definition:
#       spec:
#         serviceCIDRs:
#           - 10.254.0.0/16
#         calicoNetwork:
#           multiInterfaceMode: "Multus"
#           # linuxDataplane: "BPF"
#           bgp: "Enabled"
#           # mtu: 9000
#           nodeAddressAutodetectionV4:
#             kubernetes: NodeInternalIP
#             cidrs:
#             - 10.0.0.0/18
#             firstFound: false
#           containerIPForwarding: "Enabled"
# - name: Get Latest Calico Release
#   ansible.builtin.uri:
#     url: https://api.github.com/repos/projectcalico/calico/releases/latest
#     return_content: true
#   register: calico_release_json
#   failed_when: calico_release_json is failed
# - name: Download tigera apiserver manifest to the cluster.
#   ansible.builtin.get_url:
#     url: https://raw.githubusercontent.com/projectcalico/calico/{{ calico_release_json.json.tag_name }}/manifests/apiserver.yaml
#     dest: "{{ playbook_dir }}/apiserver.yaml"
#     mode: '0664'
#   register: tigeraapiservermanifest
# - name: Get Latest Calico Release
#   ansible.builtin.uri:
#     url: https://api.github.com/repos/projectcalico/calico/releases/latest
#     return_content: true
#   register: calico_release_json
#   failed_when: calico_release_json is failed
# - name: Download tigera apiserver manifest to the cluster.
#   ansible.builtin.get_url:
#     url: https://raw.githubusercontent.com/projectcalico/calico/{{ calico_release_json.json.tag_name }}/manifests/apiserver.yaml
#     dest: "{{ playbook_dir }}/apiserver.yaml"
#     mode: '0664'
#   register: tigeraapiservermanifest
- name: Create APIServer for Tigera Operator
  when: kubeconfig.stat.exists
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    state: present
    apply: true
    server_side_apply:
      field_manager: ansible
    definition:
      apiVersion: operator.tigera.io/v1
      kind: APIServer
      metadata:
        name: default
      spec: {}
- name: Configure Coredns
  run_once: true
  delegate_to: localhost
  kubernetes.core.k8s:
    kubeconfig: "{{ home }}/.kube/config"
    api_version: helm.cattle.io/v1
    kind: HelmChartConfig
    name: rke2-coredns
    namespace: kube-system
    state: present
    definition:
      spec:
        valuesContent: |-
          global:
            clusterDNS: 
            - 10.254.0.10
          nodelocal:
            enabled: true
          service:
            # clusterIP: 10.254.0.10
            # loadBalancerIP: 10.0.100.2
            # externalTrafficPolicy: Local
            serviceType: ClusterIP
            annotations:
              metallb.universe.tf/allow-shared-ip: coredns
          rbac:
            create: true
          prometheus:
            service:
              enabled: false
              annotations:
                prometheus.io/scrape: "true"
                prometheus.io/port: "9153"
            monitor:
              enabled: false
          autoscaler:
            enabled: true
            min: 2
            max: 5
          servers:
          - zones:
            - zone: .
            port: 53
            plugins:
            - name: errors
            # Serves a /health endpoint on :8080, required for livenessProbe
            - name: health
              configBlock: |-
                lameduck 5s
            # Serves a /ready endpoint on :8181, required for readinessProbe
            - name: ready
            # Required to query kubernetes API for data
            - name: kubernetes
              parameters: cluster.local in-addr.arpa ip6.arpa homelab.heyser.lan homelab.heyser.xyz
              configBlock: |-
                pods insecure
                fallthrough in-addr.arpa ip6.arpa homelab.heyser.lan homelab.heyser.xyz
                ttl 30
            - name: prometheus
              parameters: 0.0.0.0:9153
            - name: forward
              parameters: . /etc/resolv.conf 10.0.0.1
              configBlock: |-
                except "cluster.local" "svc.cluster.local" ".svc"
                policy sequential
            - name: cache
              parameters: 30
            - name: loop
            - name: reload
            - name: loadbalance
          zoneFiles:
          - filename: heyser.xyz
            domain: heyser.xyz
            contents: |
              heyser.xyz.   IN SOA  kyrie.ns.cloudflare.com. dns.cloudflare.com. 2325026458 10000 2400 604800 1800
              heyser.xyz. IN A   10.0.100.1
              homelab.heyser.xyz. IN A   10.0.100.1
              *.homelab.heyser.xyz. IN A   10.0.100.1