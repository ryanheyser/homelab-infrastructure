---
- name: Ping Hosts
  hosts: all
  become_method: sudo
  tags:
    - ping
  tasks:
    - name: Ping all hosts
      delegate_to: localhost
      delegate_facts: true
      check_mode: false
      ansible.builtin.command: |
        ping -c 2 "{{ inventory_hostname }}"
      become: true
      failed_when: ping_hosts.rc == 1 or ping_hosts.rc > 2
      register: ping_hosts
      changed_when: false

- name: Setup SSH Access
  hosts: all
  become_method: sudo
  tags:
    - ssh
  tasks:
    - name: Setup | Read SSH Key
      ansible.builtin.set_fact:
        ansible_ssh_key_pub: "{{ lookup('template', playbook_dir + '/secrets/ansible_id_ed25519.pub') }}"
    - name: Setup | Add SSH Key to known hosts
      ansible.builtin.known_hosts:
        name: "{{ ansible_host }}"
        key: "{{ ansible_host }} {{ ansible_ssh_key_pub }}"
      changed_when: false

# Load Variables
- name: Load Variables
  hosts: all
  tags:
    - vars
  vars:
    home: "{{ lookup('ansible.builtin.env', 'HOME') }}"
  tasks:
    - name: Stat vars.yml
      ansible.builtin.stat:
        path: "{{ playbook_dir }}/vars.yml"
      register: vars_file
    - name: Load vars
      ansible.builtin.include_vars:
        file: "{{ vars_file.stat.path }}"
      when: vars_file.stat.exists

- name: Setup localhost
  hosts: localhost
  gather_facts: false
  # become_method: sudo
  tags:
    - setup
    - kubernetes
  tasks:
    - name: Setup localhost to ensure ansible is successful
      ansible.builtin.include_tasks:
        file: "{{ playbook_dir }}/tasks/setup-local.yml"

- name: Setup Hosts
  connection: ssh
  gather_facts: true
  # become_method: sudo
  hosts: all
  tags:
    - setup
  tasks:
    - name: Setup | Hosts
      ansible.builtin.include_tasks:
        file: "{{ playbook_dir }}/tasks/setup.yml"

- name: Setup Kubernetes Hosts
  hosts: kubernetes
  # become_method: sudo
  connection: ssh
  # vars:
  tags:
    - setup
    - kubernetes
  tasks:
    - name: Setup | Hosts
      ansible.builtin.include_tasks:
        file: "{{ playbook_dir }}/tasks/setup-kubernetes.yml"

# Age/Sops
- name: Age/Sops
  hosts: localhost
  # become_method: sudo
  tags:
    - setup
    - kubernetes
  vars:
    home: "{{ lookup('ansible.builtin.env', 'HOME') }}"
  tasks:
    - name: Stat age.key
      ansible.builtin.stat:
        path: "{{ home }}/.config/sops/age/keys.txt"
      register: age_key_file
    - name: Fail if Age Keyfile does not exist
      ansible.builtin.fail:
        message: "{{ home }}/.config/sops/age/keys.txt does not exist"
      when: not age_key_file.stat.exists
    - name: Get Age Public Key
      ansible.builtin.command: |
        grep -Po '(?<=public key: ).*' {{ home }}/.config/sops/age/keys.txt
      register: age_public_key
      when: age_key_file.stat.exists
      changed_when: true

# Flux
- name: Install Flux
  hosts: localhost
  # become_method: sudo
  tags:
    - setup
    - kubernetes
    - Flux
  tasks:
    - name: Install Flux CLI
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          curl -s https://fluxcd.io/install.sh | bash
        executable: /bin/bash
      become: true
      changed_when: true

# DNS
- name: Externaldns-key
  hosts: localhost
  strategy: linear
  # become_method: sudo
  tags:
    - setup
    - kubernetes
    - dns
  tasks:
    - name: Generate externaldns-key
      # noqa: run-once[task]
      run_once: true
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          /usr/sbin/tsig-keygen -a hmac-sha256 externaldns | /usr/bin/grep secret | /usr/bin/cut -d '"' -f2
        executable: /bin/bash
      register: externaldns_key
      changed_when: false
# - name: Setup DNS
#   hosts: kubernetes
#   tags:
#     - setup
#     - kubernetes
#     - dns
#   tasks:
#     - name: Setup BIND9
#       vars:
#         bind_dnssec_enable: false
#         bind_dnssesc_validation: false
#         # bind_listen_ipv4:
#         #   - '127.0.0.1'
#         bind_allow_query:
#           - any
#         bind_allow_recursion:
#           - any
#         bind_dns_keys:
#           - name: externaldns-key
#             algorithm: hmac-sha256
#             secret: "{{ externaldns_key }}"
#         bind_zones:
#           - name: homelab.heyser.lan
#             type: primary
#             primaries:
#               "{{ groups.controlnodes | map('extract', hostvars) | map(attribute='ansible_host') | list }}"
#           - name: homelab.heyser.lan
#             type: secondary
#             primaries:
#               "{{ groups.workernodes | map('extract', hostvars) | map(attribute='ansible_host') | list }}"
#       ansible.builtin.import_role:
#         name: "bertvv.bind"


# rke2
- name: RKE2 | install kubernetes
  hosts: kubernetes
  # become_method: sudo
  tags:
    - setup
    - kubernetes
    - rke2
  vars:
    registry_hosts: |
      {% set var = [] %}
      {% for x in groups['controlnodes'] %}
        {%- set var = var.append('https://' + hostvars[x].ansible_host + ':5001') -%}
      {% endfor %}
      {{ var }}
  tasks:
    - name: Setup | RKE2 Part 1
      ansible.builtin.include_tasks:
        file: "{{ playbook_dir }}/tasks/rke2-p1.yml"

- name: Post rke2 install
  hosts: controlnodes
  gather_facts: false
  # become_method: sudo
  strategy: linear
  tags:
    - setup
    - kubernetes
    - rke2
  tasks:
    - name: Setup | RKE2 Part 2
      ansible.builtin.include_tasks:
        file: "{{ playbook_dir }}/tasks/rke2-p2.yml"

- name: Post rke2 install part 2
  hosts: localhost
  gather_facts: false
  # become_method: sudo
  vars:
    home: "{{ lookup('ansible.builtin.env', 'HOME') }}"
  tags:
    - setup
    - kubernetes
    - rke2
  tasks:
    - name: Setup | RKE2 Part 3
      ansible.builtin.include_tasks:
        file: "{{ playbook_dir }}/tasks/rke2-p3.yml"

- name: Post rke2 install part 3
  hosts: kubernetes
  gather_facts: false
  # become_method: sudo
  vars:
    home: "{{ lookup('ansible.builtin.env', 'HOME') }}"
  tags:
    - setup
    - kubernetes
    - rke2
  tasks:
    - name: Setup | RKE2 Part 4
      ansible.builtin.include_tasks:
        file: "{{ playbook_dir }}/tasks/rke2-p4.yml"

- name: Post rke2 install part 4 - cni
  hosts: localhost
  gather_facts: false
  # become_method: sudo
  vars:
    home: "{{ lookup('ansible.builtin.env', 'HOME') }}"
  tags:
    - setup
    - kubernetes
    - rke2
    - cni
  tasks:
    - name: Setup | RKE2 Part 5
      ansible.builtin.include_tasks:
        file: "{{ playbook_dir }}/tasks/rke2-p5.yml"
